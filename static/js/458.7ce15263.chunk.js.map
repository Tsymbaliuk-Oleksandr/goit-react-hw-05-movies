{"version":3,"file":"static/js/458.7ce15263.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","components/SearchBox/SearchBox.styled.js","components/SearchBox/SearchBox.jsx","pages/Movies/Movies.jsx","themoviedbOrgAPI/themoviedbOrgAPI.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const ListEl = styled.li`\n  margin-bottom: 8px;\n  list-style-type: none;\n`;\n\nexport const Navlink = styled(NavLink)`\n  color: darkblue;\n  text-decoration: none;\n  :hover {\n    color: purple;\n    text-decoration: underline;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { ListEl, Navlink } from './MovieList.styled';\nimport Box from 'components/Box';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <Box as=\"ul\" pl=\"20px\">\n      {movies.length > 0 &&\n        movies.map(({ id, title }) => {\n          return (\n            <ListEl key={id}>\n              <Navlink to={`/movies/${id}`} state={{ from: location }}>\n                {title}\n              </Navlink>\n            </ListEl>\n          );\n        })}\n    </Box>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n};\n\nexport default MovieList;\n","import styled from 'styled-components';\nimport { ImSearch } from 'react-icons/im';\n\nexport const Input = styled.input`\n  padding: 8px 20px 8px 8px;\n  border-radius: 4px;\n  font: inherit;\n`;\n\nexport const SearchButton = styled.button`\n  position: relative;\n  background-color: #fff;\n  width: 40px;\n  height: 40px;\n  border: 0;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  :hover {\n    opacity: 1;\n  }\n`;\n\nexport const Icon = styled(ImSearch)`\n  width: 20px;\n  height: 20px;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n","import PropTypes from 'prop-types';\nimport { Input, SearchButton, Icon } from './SearchBox.styled';\n\nimport Box from 'components/Box';\n\nconst SearchBox = ({ onSubmit }) => {\n  return (\n    <Box as=\"form\" display=\"flex\" alignItems=\"center\" onSubmit={onSubmit}>\n      <Input name=\"query\" autoComplete=\"off\" placeholder=\"Search movies\" />\n      <SearchButton type=\"submit\">\n        <Icon />\n      </SearchButton>\n    </Box>\n  );\n};\n\nexport default SearchBox;\n\nSearchBox.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useLocation, useSearchParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { searchMovies } from 'themoviedbOrgAPI/themoviedbOrgAPI';\nimport SearchBox from 'components/SearchBox';\nimport MovieList from 'components/MovieList';\nimport Box from 'components/Box';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    const query = searchParams.get('query');\n\n    if (query) {\n      searchMovies(query).then(setMovies);\n    }\n  }, [searchParams]);\n\n  const handleSearchChange = event => {\n    event.preventDefault();\n    const query = event.target.elements.query.value.trim().toLowerCase();\n\n    setSearchParams(query !== '' ? { query } : {});\n  };\n\n  return (\n    <Box as=\"section\" ml=\"30px\">\n      <h1>Movies</h1>\n      <Box>\n        <SearchBox onSubmit={handleSearchChange} />\n        {movies.length > 0 && (\n          <MovieList movies={movies} state={{ from: location }} />\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = '413db9532d5787ee509e5f4a56809ea0';\nconst API_BASE_URL = 'https://api.themoviedb.org/3';\nexport const API_IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\naxios.defaults.baseURL = API_BASE_URL;\n\nconst params = {\n  params: { api_key: API_KEY },\n};\n\nexport const fetchTrending = async () => {\n  try {\n    const response = await axios\n      .get(`/trending/movie/day`, params)\n      .then(response => response.data.results);\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchMovie = async id => {\n  try {\n    const response = await axios\n      .get(`/movie/${id}`, params)\n      .then(response => response.data);\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchMovieCast = async id => {\n  try {\n    const response = await axios\n      .get(`/movie/${id}/credits`, params)\n      .then(response => response.data);\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchMovieReview = async id => {\n  try {\n    const response = await axios\n      .get(`/movie/${id}/reviews`, params)\n      .then(response => response.data.results);\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const searchMovies = async query => {\n  const params = { params: { api_key: API_KEY, query } };\n  try {\n    const response = await axios\n      .get(`/search/movie`, params)\n      .then(response => response.data.results);\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n"],"names":["ListEl","styled","Navlink","NavLink","movies","location","useLocation","Box","as","pl","length","map","id","title","to","state","from","Input","SearchButton","Icon","ImSearch","onSubmit","display","alignItems","name","autoComplete","placeholder","type","useState","setMovies","useSearchParams","searchParams","setSearchParams","useEffect","query","get","searchMovies","then","ml","event","preventDefault","target","elements","value","trim","toLowerCase","MovieList","API_KEY","API_IMG_URL","axios","params","api_key","fetchTrending","response","data","results","console","error","fetchMovie","fetchMovieCast","fetchMovieReview"],"sourceRoot":""}