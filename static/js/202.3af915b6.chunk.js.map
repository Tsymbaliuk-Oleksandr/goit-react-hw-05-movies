{"version":3,"file":"static/js/202.3af915b6.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx","themoviedbOrgAPI/themoviedbOrgAPI.js"],"sourcesContent":["import styled from 'styled-components';\nimport { ImArrowLeft2 } from 'react-icons/im';\n\nexport const Poster = styled.img`\n  margin-left: 30px;\n  border-radius: 10px;\n`;\n\nexport const BackButton = styled.button`\n  position: relative;\n  background-color: #fff;\n  margin-left: 10px;\n  margin-bottom: 10px;\n  height: 40px;\n  border: 0;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  :hover {\n    opacity: 1;\n  }\n`;\n\nexport const ButtonText = styled.div`\n  font-size: 16px;\n  font-weight: 700;\n  color: rgba(80, 80, 80, 0.5);\n  padding: 10px 0 10px 25px;\n  opacity: 0;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover {\n    opacity: 1;\n  }\n`;\n\nexport const Icon = styled(ImArrowLeft2)`\n  width: 20px;\n  height: 20px;\n  position: absolute;\n  top: 50%;\n  left: 0;\n  transform: translate(0, -50%);\n`;\n","import { fetchMovie, API_IMG_URL } from 'themoviedbOrgAPI/themoviedbOrgAPI';\nimport { useEffect, useState, Suspense } from 'react';\nimport {\n  Link,\n  Outlet,\n  useParams,\n  useLocation,\n  useNavigate,\n  Navigate,\n} from 'react-router-dom';\nimport Box from 'components/Box';\nimport { Poster, BackButton, ButtonText, Icon } from './MovieDetails.styled.js';\n\nconst MovieDetails = () => {\n  const [movieData, setMovieData] = useState();\n  const { movieId } = useParams();\n\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    fetchMovie(movieId).then(setMovieData);\n  }, [movieId]);\n\n  if (movieData === undefined) {\n    return;\n  }\n  if (movieData === null) {\n    return <Navigate to=\"/not-found\" replace={true} />;\n  }\n\n  const { title, poster_path, genres, vote_average, overview } = movieData;\n\n  return (\n    <Box as=\"section\">\n      {movieData && (\n        <Box>\n          <BackButton\n            type=\"button\"\n            onClick={() => navigate(location?.state?.from ?? '/')}\n          >\n            <ButtonText>Go back</ButtonText>\n            <Icon />\n          </BackButton>\n          <Box\n            display=\"flex\"\n            height=\"450px\"\n            pb=\"10px\"\n            boxShadow=\"0px 3px 1px 1px rgba(100, 100, 150, 0.15)\"\n          >\n            <Poster src={`${API_IMG_URL}${poster_path}`} alt=\"movie poster\" />\n            <Box ml=\"20px\">\n              <h2>{title}</h2>\n              <p>\n                User score: <b>{vote_average}</b>\n              </p>\n              <h3>Overview</h3>\n              <p>{overview}</p>\n              <h3>Genres</h3>\n              <p>\n                {genres.map(({ id, name }) => (\n                  <span key={id}>{name}</span>\n                ))}\n              </p>\n            </Box>\n          </Box>\n          <Box\n            pb=\"10px\"\n            pl=\"30px\"\n            boxShadow=\"0px 3px 1px 1px rgba(100, 100, 150, 0.15)\"\n          >\n            <h3>Additional information</h3>\n            <p>\n              <Link to=\"cast\" state={{ from: location.state?.from }}>\n                Cast\n              </Link>\n            </p>\n            <p>\n              <Link to=\"reviews\" state={{ from: location.state?.from }}>\n                Reviews\n              </Link>\n            </p>\n          </Box>\n          <Suspense fallback={<section>Loading...</section>}>\n            <Outlet />\n          </Suspense>\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst API_KEY = '413db9532d5787ee509e5f4a56809ea0';\nconst API_BASE_URL = 'https://api.themoviedb.org/3';\nexport const API_IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\naxios.defaults.baseURL = API_BASE_URL;\n\nconst params = {\n  params: { api_key: API_KEY },\n};\n\nexport const fetchTrending = async () => {\n  try {\n    const response = await axios\n      .get(`/trending/movie/day`, params)\n      .then(response => response.data.results);\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchMovie = async id => {\n  try {\n    const response = await axios\n      .get(`/movie/${id}`, params)\n      .then(response => response.data);\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchMovieCast = async id => {\n  try {\n    const response = await axios\n      .get(`/movie/${id}/credits`, params)\n      .then(response => response.data);\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchMovieReview = async id => {\n  try {\n    const response = await axios\n      .get(`/movie/${id}/reviews`, params)\n      .then(response => response.data.results);\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const searchMovies = async query => {\n  const params = { params: { api_key: API_KEY, query } };\n  try {\n    const response = await axios\n      .get(`/search/movie`, params)\n      .then(response => response.data.results);\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n"],"names":["Poster","styled","BackButton","ButtonText","Icon","ImArrowLeft2","useState","movieData","setMovieData","movieId","useParams","location","useLocation","navigate","useNavigate","useEffect","fetchMovie","then","undefined","to","replace","title","poster_path","genres","vote_average","overview","Box","as","type","onClick","state","from","display","height","pb","boxShadow","src","API_IMG_URL","alt","ml","map","id","name","pl","Suspense","fallback","API_KEY","axios","params","api_key","fetchTrending","response","data","results","console","error","fetchMovieCast","fetchMovieReview","searchMovies","query"],"sourceRoot":""}